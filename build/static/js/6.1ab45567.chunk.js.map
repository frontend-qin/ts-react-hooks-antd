{"version":3,"sources":["router/menu.ts","layout/SideBar/index.tsx","layout/Header/index.tsx","layout/Tag/index.tsx","layout/index.tsx"],"names":["menuList","title","path","icon","isShow","children","SubMenu","withRouter","props","useState","activeMenu","setPath","useEffect","history","push","Sider","trigger","collapsible","collapsed","isOpen","className","mode","theme","onSelect","item","key","dom","domEvent","target","onMenuClick","innerText","defaultSelectedKeys","selectedKeys","style","borderRight","renderMenu","data","map","length","type","Item","to","menuName","setTitle","menu","onClick","params","backTitle","getTitle","filter","Header","openChange","index","overlay","src","TabPane","panes","setPanes","activeKey","setActiveKey","lastIndex","setLastIndex","remove","targetKey","forEach","pane","i","newPanes","onTabPan","hideAdd","onChange","onEdit","action","tabBarGutter","tab","activeRoute","Index","collspans","setCollspans","setActiveMenu","setMenuList","some","activePath","newMenuList","newActiveMenu","Content","bordered"],"mappings":"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","file":"static/js/6.1ab45567.chunk.js","sourcesContent":["// 定义数组中的每一项\r\n//  extends Record<string, any> 任意属性\r\nexport interface ItemType {\r\n  title?: string\r\n  icon?: string\r\n  path: string\r\n  isShow: boolean\r\n  children: menuListType\r\n}\r\n\r\nexport type menuListType = Array<ItemType>\r\n\r\n// 菜单侧边栏\r\nexport const menuList: menuListType = [\r\n  {\r\n    title: '首页',\r\n    path: '/home',\r\n    icon: 'home',\r\n    isShow: true,\r\n    children: []\r\n  },\r\n  {\r\n    title: '用户管理',\r\n    path: '/user',\r\n    icon: 'user',\r\n    isShow: true,\r\n    children: [\r\n      {\r\n        title: '用户详情',\r\n        path: '/user/infor',\r\n        isShow: true,\r\n        icon: '',\r\n        children: []\r\n      }\r\n    ]\r\n  }\r\n]\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Layout, Menu, Icon } from 'antd'\r\nimport { menuList, menuListType } from 'src/router/menu'\r\nimport { NavLink, withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport './index.less'\r\n\r\nconst { SubMenu } = Menu\r\n// 修饰侧边栏菜单\r\ntype DataType = {\r\n  title: string\r\n  path: string\r\n}\r\ninterface SideBarProps extends RouteComponentProps {\r\n  isOpen: boolean\r\n  onMenuClick: (data: DataType) => void\r\n  activeMenu: any\r\n}\r\n\r\ninterface SelectParam {\r\n  key: string\r\n  keyPath: Array<string>\r\n  item: any\r\n  domEvent: Event\r\n  selectedKeys: Array<string>\r\n}\r\n\r\nconst AppSideBar = (props: SideBarProps) => {\r\n  // 渲染菜单数据\r\n  const renderMenu = (data: menuListType) => {\r\n    return data.map(item => {\r\n      if (item.isShow) {\r\n        //   如果children.length > 0,接着递归\r\n        if (item.children.length > 0) {\r\n          return (\r\n            <SubMenu\r\n              key={item.path}\r\n              title={\r\n                <span>\r\n                  <Icon type={item.icon} />\r\n                  <span>{item.title}</span>\r\n                </span>\r\n              }\r\n            >\r\n              {renderMenu(item.children)}\r\n            </SubMenu>\r\n          )\r\n        }\r\n        return (\r\n          <Menu.Item key={item.path}>\r\n            <NavLink to={item.path}>\r\n              {item.icon ? <Icon type={item.icon} /> : null}\r\n              <span>{item.title}</span>\r\n            </NavLink>\r\n          </Menu.Item>\r\n        )\r\n      }\r\n    })\r\n  }\r\n  const [path, setPath] = useState(props.activeMenu.path)\r\n  useEffect(() => {\r\n    props.history.push(path)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let path = props.activeMenu.path\r\n    setPath(path)\r\n    props.history.push(path)\r\n  }, [props.activeMenu])\r\n\r\n  // 点击menuItme 的回调\r\n  const menuHandle = (item: SelectParam) => {\r\n    setPath(item.key)\r\n    let dom: any = item.domEvent.target\r\n    props.onMenuClick({\r\n      title: dom!.innerText,\r\n      path: item.key\r\n    })\r\n  }\r\n  return (\r\n    <Layout.Sider trigger={null} collapsible collapsed={props.isOpen}>\r\n      <div className='logo' />\r\n      <Menu\r\n        mode='inline'\r\n        theme='dark'\r\n        onSelect={menuHandle}\r\n        defaultSelectedKeys={[path]}\r\n        selectedKeys={[path]}\r\n        style={{ borderRight: 0 }}\r\n        className='sider_bar'\r\n      >\r\n        {renderMenu(menuList)}\r\n      </Menu>\r\n    </Layout.Sider>\r\n  )\r\n}\r\n\r\nexport default withRouter(AppSideBar)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Layout, Icon, Avatar, Dropdown, Menu, Breadcrumb } from 'antd'\r\nimport './index.less'\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\r\nimport { menuList } from 'src/router/menu'\r\n\r\nfunction getTitle(title: string, menuList: any) {\r\n  return menuList.filter((menu: any) => {\r\n    if (menu.children.length > 0) {\r\n      return getTitle(title, menu.children)\r\n    }\r\n    return menu.title === title\r\n  })\r\n}\r\n\r\ntype menuNameType = {\r\n  title: string\r\n  path: string\r\n}\r\n// 需要让自己的接口继承路由的 RouteComponentProps 接口\r\ninterface HeaderProps extends RouteComponentProps {\r\n  isOpen: boolean\r\n  openChange: (params: boolean) => void\r\n  menuName: menuNameType\r\n}\r\n\r\ninterface paramsType {\r\n  key: string\r\n}\r\n\r\n// 定义组件的接口\r\n\r\nconst AppHeader = (props: HeaderProps) => {\r\n  const toggle = () => {\r\n    props.openChange(!props.isOpen)\r\n  }\r\n  const itemHandle = (params: paramsType) => {\r\n    props.history.push(params.key)\r\n  }\r\n  const [title, setTitle] = useState([props.menuName.title])\r\n\r\n  const menu = (\r\n    <Menu onClick={itemHandle}>\r\n      <Menu.Item key='/login'>\r\n        <Icon type='logout' />\r\n        退出\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n  useEffect(() => {\r\n    const { title } = props.menuName\r\n    let backTitle = getTitle(title, menuList)\r\n    // 此处需要做递归处理\r\n    backTitle[0].title === '首页'\r\n      ? setTitle([title])\r\n      : setTitle([backTitle[0].title, props.menuName.title])\r\n  }, [props.menuName])\r\n  return (\r\n    <Layout.Header className='app_header'>\r\n      <div className='menu_float'>\r\n        <span className='menu_icon'>\r\n          <Icon\r\n            className='trigger'\r\n            type={props.isOpen ? 'menu-unfold' : 'menu-fold'}\r\n            onClick={toggle}\r\n          />\r\n        </span>\r\n        <Breadcrumb>\r\n          {title.map((item, index) => (\r\n            <Breadcrumb.Item key={index}>{item}</Breadcrumb.Item>\r\n          ))}\r\n        </Breadcrumb>\r\n      </div>\r\n      <div>\r\n        <Dropdown overlay={menu}>\r\n          <Avatar src='https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png' />\r\n        </Dropdown>\r\n      </div>\r\n    </Layout.Header>\r\n  )\r\n}\r\n// withRouter\r\nexport default withRouter(AppHeader)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Tabs } from 'antd'\r\nimport './index.less'\r\nimport { withRouter, RouteComponentProps } from 'react-router'\r\nconst { TabPane } = Tabs\r\n\r\ntype menuType = {\r\n  title: string\r\n  path: string\r\n}\r\ninterface Props extends RouteComponentProps {\r\n  menuList: Array<any>\r\n  activeMenu: menuType\r\n  onTabPan: (data: string, activeKey: string) => void\r\n}\r\n\r\nconst Tag = (props: Props) => {\r\n  const [panes, setPanes] = useState(props.menuList)\r\n  let [activeKey, setActiveKey] = useState(props.activeMenu.path)\r\n  useEffect(() => {\r\n    setActiveKey(props.activeMenu.path)\r\n  }, [props.activeMenu])\r\n  useEffect(() => {\r\n    setPanes(props.menuList)\r\n  }, [props.menuList])\r\n\r\n  // 点击切换选项卡\r\n  const onChange = (activeKey: string) => {\r\n    props.history.push(activeKey)\r\n    setActiveKey(activeKey)\r\n    props.onTabPan('', activeKey)\r\n  }\r\n\r\n  const onEdit = (targetKey: any, action: 'add' | 'remove') => {\r\n    remove(targetKey)\r\n  }\r\n  const [lastIndex, setLastIndex] = useState(0)\r\n  // 删除标签\r\n  const remove = (targetKey: any) => {\r\n    panes.forEach((pane, i) => pane.path === targetKey && setLastIndex(i - 1))\r\n    const newPanes = panes.filter(pane => pane.path !== targetKey)\r\n    if (newPanes.length && activeKey === targetKey) {\r\n      activeKey = lastIndex >= 0 ? newPanes[lastIndex].path : newPanes[0].path\r\n    }\r\n    setActiveKey(activeKey)\r\n    setPanes(newPanes)\r\n    props.onTabPan(targetKey, activeKey)\r\n  }\r\n  return (\r\n    <Tabs\r\n      hideAdd\r\n      onChange={onChange}\r\n      activeKey={activeKey}\r\n      type='editable-card'\r\n      onEdit={onEdit}\r\n      tabBarGutter={5}\r\n    >\r\n      {panes.map(pane => (\r\n        <TabPane tab={pane.title} key={pane.path}></TabPane>\r\n      ))}\r\n    </Tabs>\r\n  )\r\n}\r\n\r\nexport default withRouter(Tag)\r\n","import React, { useState } from 'react'\r\nimport { Layout, Card } from 'antd'\r\nimport AppSideBar from './SideBar'\r\nimport AppHeader from './Header'\r\nimport Tag from './Tag'\r\nimport './index.less'\r\n\r\n// props.children 约束\r\nexport interface LayoutProps extends React.Props<any> {}\r\n\r\n// 定义changeCollspan 函数的类型\r\ntype ChangeCollspanType = (isOpen: boolean) => void\r\n\r\nlet activeRoute = {\r\n  title: '首页',\r\n  path: '/home'\r\n}\r\nconst Index = (props: LayoutProps): React.ReactElement => {\r\n  const [collspans, setCollspans] = useState(false)\r\n  const [activeMenu, setActiveMenu] = useState(activeRoute)\r\n  const [menuList, setMenuList] = useState([activeRoute])\r\n  //点击按钮的回调事件\r\n  const changeCollspan: ChangeCollspanType = isOpen => setCollspans(isOpen)\r\n  // 选择菜单后的回调\r\n  const menuClick = (data: any) => {\r\n    let isHas = menuList.some(item => item.title === data.title)\r\n    !isHas && menuList.push(data)\r\n    setMenuList(menuList)\r\n    setActiveMenu(data)\r\n  }\r\n  // 选项卡的删除按钮\r\n  const tabClickHandle = (path: string, activePath: string) => {\r\n    let newMenuList = menuList.filter(item => item.path !== path)\r\n    setMenuList(newMenuList)\r\n    let newActiveMenu: any = menuList.filter(item => item.path === activePath)\r\n    setActiveMenu(newActiveMenu[0])\r\n  }\r\n  return (\r\n    <Layout>\r\n      <AppSideBar\r\n        isOpen={collspans}\r\n        onMenuClick={menuClick}\r\n        activeMenu={activeMenu}\r\n      />\r\n      <Layout>\r\n        <AppHeader\r\n          isOpen={collspans}\r\n          openChange={changeCollspan}\r\n          menuName={activeMenu}\r\n        />\r\n        <Tag\r\n          menuList={menuList}\r\n          activeMenu={activeMenu}\r\n          onTabPan={tabClickHandle}\r\n        />\r\n        <Layout.Content className='content'>\r\n          <Card bordered={false}>{props.children}</Card>\r\n        </Layout.Content>\r\n      </Layout>\r\n    </Layout>\r\n  )\r\n}\r\nexport default Index\r\n"],"sourceRoot":""}